Index: src/Airship/ManOWar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Airship;\r\n\r\nimport General.AnimatedThing;\r\nimport General.StaticThing;\r\nimport Quarter.Quarter;\r\n\r\npublic class ManOWar extends Airship {\r\n\r\n    int[][] positionQuarter = {{0,0},{1,0},{0,1},{1,1},{5,1},{6,1},{0,2},{1,2},{3,2},{4,2},{5,2},{6,2},{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,3},{0,4},{1,4},{2,4},{3,4},{4,4},{5,4},{6,4},{1,5},{2,5},{3,5},{4,5},{5,5}};\r\n    int maxRow=6;\r\n    int maxColumn=7;\r\n\r\n    public ManOWar(String name) {\r\n        super(name);\r\n        this.name = name;\r\n        numberQuarter=positionQuarter.length;\r\n        quarterList = new Quarter[maxRow][maxColumn];\r\n    }\r\n\r\n    AnimatedThing image = new AnimatedThing(\"C:\\\\Users\\\\Félix\\\\Documents\\\\Cours\\\\ENSEA_2A\\\\Projet\\\\Java\\\\Image\\\\ManOWar.png\",200, 20, 2574, 2480, 4, 727, 700);\r\n\r\n    public AnimatedThing getImage() {\r\n        return image;\r\n    }\r\n\r\n    public int[][] getPositionQuarter() {\r\n        return positionQuarter;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Airship/ManOWar.java b/src/Airship/ManOWar.java
--- a/src/Airship/ManOWar.java	
+++ b/src/Airship/ManOWar.java	
@@ -15,9 +15,10 @@
         this.name = name;
         numberQuarter=positionQuarter.length;
         quarterList = new Quarter[maxRow][maxColumn];
+        System.out.println(positionQuarter[1][0]);
     }
 
-    AnimatedThing image = new AnimatedThing("C:\\Users\\Félix\\Documents\\Cours\\ENSEA_2A\\Projet\\Java\\Image\\ManOWar.png",200, 20, 2574, 2480, 4, 727, 700);
+    AnimatedThing image = new AnimatedThing("ManOWar.png",200, 20, 2574, 2480, 4, 727, 700);
 
     public AnimatedThing getImage() {
         return image;
Index: src/Quarter/Quarter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Quarter;\r\n\r\nimport javafx.scene.layout.Pane;\r\n\r\npublic abstract class Quarter {\r\n\r\n    //Construction cost, consumption, upgrade cost, variable\r\n    protected int level;\r\n    protected int maxLevel;\r\n    protected int crew;\r\n\r\n    protected int[] maxCrew;\r\n    protected int[] bitCost;\r\n    protected int[] codeDataCost;\r\n    protected int[] cryptomoneyCost;\r\n    protected int[] electricityConsumption;\r\n\r\n    protected long production;\r\n    protected String productionType;\r\n\r\n    protected Pane infoPane = new Pane();\r\n\r\n    protected String style;\r\n    protected String selectedStyle;\r\n\r\n    protected String name;\r\n\r\n\r\n    public Quarter() {\r\n        infoPane.setPrefSize(200,500);\r\n        infoPane.setLayoutX(1340);\r\n        infoPane.setLayoutY(50);\r\n\r\n    }\r\n\r\n\r\n    public int getCrew() {\r\n        return crew;\r\n    }\r\n\r\n    public int getLevel() {\r\n        return level;\r\n    }\r\n\r\n    public void crewUp() {\r\n        if (crew<maxCrew[level-1]) {\r\n            crew++;\r\n        }\r\n    }\r\n\r\n    public void crewDown() {\r\n        crew--;\r\n    }\r\n\r\n    //ISADJACENT DOIT SE RECALCULER CHAQUE FOIS QUE L'ON UP/CONSTRUIT/DETRUIT UN QUARTER ET PAS A CHAQUE TOUR -> CREER FONCTION RESET ET FONCTION POUR TOUT CALCULER\r\n    public abstract void isAdjacent(int quarterAdjacentType, int crewAdjacent, int levelAdjacent, int parameterAdjacent);\r\n\r\n    public void upgrade() {\r\n        //RAJOUTER SI LOCK PAR TECH\r\n        level++;\r\n    }\r\n\r\n    public void construct() {\r\n\r\n    }\r\n\r\n    //Test functions\r\n    public int getMaxCrew() {\r\n        return maxCrew[level-1];\r\n    }\r\n\r\n    public int getMaxLevel() {\r\n        return maxLevel;\r\n    }\r\n\r\n    public int getCodeDataCost() {\r\n        return codeDataCost[level-1];\r\n    }\r\n\r\n    public int getBitCost() {\r\n        return bitCost[level-1];\r\n    }\r\n\r\n    public int getCryptomoneyCost() {\r\n        return cryptomoneyCost[level-1];\r\n    }\r\n\r\n    public int getElectricityConsumption() {\r\n        return electricityConsumption[level-1];\r\n    }\r\n\r\n    public Pane getInfoPane() {\r\n        return infoPane;\r\n    }\r\n\r\n    public String getStyle() {\r\n        return style;\r\n    }\r\n\r\n    public String getSelectedStyle() {\r\n        return selectedStyle;\r\n    }\r\n\r\n    public long getProduction() {\r\n        return production;\r\n    }\r\n\r\n    public String getProductionType (){\r\n        return productionType;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Quarter/Quarter.java b/src/Quarter/Quarter.java
--- a/src/Quarter/Quarter.java	
+++ b/src/Quarter/Quarter.java	
@@ -25,6 +25,9 @@
 
     protected String name;
 
+    protected int xPos;
+    protected int yPos;
+
 
     public Quarter() {
         infoPane.setPrefSize(200,500);
@@ -108,4 +111,12 @@
     public String getProductionType (){
         return productionType;
     }
+
+    public int getxPos() {
+        return xPos;
+    }
+
+    public int getyPos() {
+        return yPos;
+    }
 }
Index: Management.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/Image\" type=\"java-resource\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"lib\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Management.iml b/Management.iml
--- a/Management.iml	
+++ b/Management.iml	
@@ -9,5 +9,7 @@
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="lib" level="project" />
+    <orderEntry type="library" name="lib1" level="project" />
+    <orderEntry type="library" name="lib2" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
--- a/.idea/runConfigurations.xml	
+++ b/.idea/runConfigurations.xml	
@@ -1,10 +1,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/libraries/lib1.xml
===================================================================
diff --git a/.idea/libraries/lib1.xml b/.idea/libraries/lib1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/lib1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="lib1">
+    <CLASSES>
+      <root url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/javafx-sdk-11.0.2/lib" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/javafx-sdk-11.0.2/lib" />
+    </SOURCES>
+    <jarDirectory url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/javafx-sdk-11.0.2/lib" recursive="false" />
+    <jarDirectory url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/javafx-sdk-11.0.2/lib" recursive="false" type="SOURCES" />
+  </library>
+</component>
\ No newline at end of file
Index: src/General/XMLReader.java
===================================================================
diff --git a/src/General/XMLReader.java b/src/General/XMLReader.java
new file mode 100644
--- /dev/null	
+++ b/src/General/XMLReader.java	
@@ -0,0 +1,23 @@
+package General;
+
+import org.xml.sax.SAXException;
+
+import javax.xml.parsers.*;
+import java.io.IOException;
+
+public class XMLReader {
+
+    /*public XMLReader(String File) {
+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
+
+        try {
+
+
+
+        }
+        catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+        }
+
+    }*/
+}
Index: .idea/libraries/lib2.xml
===================================================================
diff --git a/.idea/libraries/lib2.xml b/.idea/libraries/lib2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/lib2.xml	
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="lib2">
+    <CLASSES>
+      <root url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/JAVA_javafx_sdk_17.0.0.1/javafx-sdk-17.0.0.1/lib" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+    <jarDirectory url="file://$USER_HOME$/javafx/openjfx-11.0.2_windows-x64_bin-sdk/JAVA_javafx_sdk_17.0.0.1/javafx-sdk-17.0.0.1/lib" recursive="false" />
+  </library>
+</component>
\ No newline at end of file
Index: src/Quarter/TechTree.java
===================================================================
diff --git a/src/Quarter/TechTree.java b/src/Quarter/TechTree.java
new file mode 100644
--- /dev/null	
+++ b/src/Quarter/TechTree.java	
@@ -0,0 +1,4 @@
+package Quarter;
+
+public class TechTree {
+}
Index: src/Quarter/Tech.java
===================================================================
diff --git a/src/Quarter/Tech.java b/src/Quarter/Tech.java
new file mode 100644
--- /dev/null	
+++ b/src/Quarter/Tech.java	
@@ -0,0 +1,31 @@
+package Quarter;
+
+public class Tech {
+
+    private String techType;
+    private boolean unlocked;
+    private int requiredRessource1;
+    private int requiredRessource2;
+
+    public Tech(String techType, int ressource1, int ressource2) {
+        this.techType = techType;
+        unlocked = false;
+        requiredRessource1 = ressource1;
+        requiredRessource2 = ressource2;
+    }
+
+    public boolean getUnlocked() {
+        return unlocked;
+    }
+
+    public String getTechType() {
+        return techType;
+    }
+
+    public void techUpdate(int ressource1, int ressource2) {
+        if((requiredRessource1==ressource1)&&(requiredRessource2==ressource2)) {
+            unlocked = true;
+        }
+    }
+
+}
